一般Dp问题需要两个初始解：
	一般也很容易得到两个比较容易得到的解，例如本题中的f[0]也就是num[0],和num[1]甚至还有num[2];
状态转移：
	确定状态的改变是跟随什么发生改变的。例如本题中的，就是知道了num[k]的值，（也就是说获得了前k个值里面的最大和），这时候要确定给的
就是k+1个元素是否要添加进来，所以有max()情况。max就是给出了两种选择，一种是添加k+1项的数值，一种是不添加k+1项的数值，给出选择。

总结：java代码与c++代码相同更多逻辑思路但是c++ faster than java
